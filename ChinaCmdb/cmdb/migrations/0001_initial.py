# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-06-14 12:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=32, verbose_name='用户密码')),
                ('admin_type', models.PositiveSmallIntegerField(choices=[(0, '普通用户'), (1, '管理员'), (2, '超级管理员')], default=0, verbose_name='用户类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '管理用户表',
            },
        ),
        migrations.CreateModel(
            name='AssetRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='变更内容')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '资产记录表',
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type_id', models.PositiveSmallIntegerField(choices=[(0, '物理机'), (1, '虚拟机'), (2, '交换机'), (3, '路由器'), (4, '防火墙')], default=0, verbose_name='设备类型')),
                ('device_status_id', models.PositiveSmallIntegerField(choices=[(0, '在线'), (1, '离线'), (2, '下架'), (3, '报废')], default=0, verbose_name='设备状态')),
                ('cabinet_num', models.CharField(blank=True, max_length=32, verbose_name='机柜号')),
                ('cabinet_order', models.CharField(blank=True, max_length=32, verbose_name='机柜序号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '资产表',
            },
        ),
        migrations.CreateModel(
            name='CustomTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='自定义标签')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '自定义标签',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField(verbose_name='硬盘容量')),
                ('pd_type', models.CharField(max_length=32, verbose_name='硬盘类型')),
                ('slot', models.CharField(max_length=16, verbose_name='硬盘插槽位')),
                ('model', models.CharField(max_length=16, verbose_name='硬盘型号')),
                ('manfacturer_id', models.PositiveSmallIntegerField(choices=[(0, 'Dell'), (1, 'Seagate'), (2, 'WD'), (3, 'HITACHI'), (4, 'SamSung')], default=0, verbose_name='制造商')),
                ('assets_tag', models.CharField(blank=True, max_length=32, unique=True, verbose_name='资产标签')),
                ('sn', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='SN号')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('warranty_date', models.DateField(blank=True, null=True, verbose_name='保修日期')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '硬盘表',
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16, verbose_name='日志标题')),
                ('content', models.TextField(verbose_name='日志内容')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('asset_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets', verbose_name='错误对象')),
            ],
            options={
                'verbose_name_plural': '错误日志表',
            },
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=32, unique=True, verbose_name='主机名')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('os_platform', models.PositiveSmallIntegerField(choices=[(0, 'Centos'), (1, 'RedHat'), (2, 'Windos')], default=0, verbose_name='系统')),
                ('os_version', models.CharField(max_length=16, verbose_name='系统版本')),
                ('cpu_model', models.CharField(blank=True, max_length=16, null=True, verbose_name='CPU型号')),
                ('cpu_physical_count', models.IntegerField(blank=True, null=True, verbose_name='CPU物理个数')),
                ('cpu_count', models.IntegerField(blank=True, null=True, verbose_name='CPU逻辑核数')),
                ('model', models.CharField(blank=True, max_length=16, null=True, verbose_name='设备型号')),
                ('manfacturer_id', models.PositiveSmallIntegerField(choices=[(0, 'Dell'), (1, 'HP')], default=0, verbose_name='制造商')),
                ('assets_tag', models.CharField(blank=True, max_length=32, unique=True, verbose_name='资产标签')),
                ('sn', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='SN号')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('warranty_date', models.DateField(blank=True, null=True, verbose_name='保修日期')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('asset_obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets', verbose_name='资产对象')),
                ('custom_tag', models.ManyToManyField(to='cmdb.CustomTag', verbose_name='自定义标签')),
            ],
            options={
                'verbose_name_plural': '服务器表',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='机房名')),
                ('phone', models.CharField(max_length=32, verbose_name='联系电话')),
                ('linkman', models.CharField(blank=True, max_length=32, verbose_name='联系人')),
                ('operator', models.IntegerField(blank=True, choices=[(0, '电信'), (1, '联通'), (2, '移动'), (3, 'BGP')], default=3, null=True, verbose_name='运营商')),
                ('type', models.IntegerField(blank=True, choices=[(0, '第三方'), (1, '自建'), (2, '阿里云')], default=0, null=True, verbose_name='机房类型')),
                ('bandwidth', models.CharField(blank=True, max_length=64, verbose_name='机房带宽')),
                ('floor', models.IntegerField(default=1, verbose_name='机房楼层')),
                ('address', models.CharField(blank=True, max_length=128, verbose_name='机房地址')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '机房表',
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=16, verbose_name='内存型号')),
                ('capacity', models.FloatField(blank=True, null=True, verbose_name='容量')),
                ('slot', models.CharField(max_length=16, verbose_name='插槽位')),
                ('manfacturer_id', models.PositiveSmallIntegerField(choices=[(0, 'SamSung'), (1, 'Kingston'), (2, 'Micron')], default=0, verbose_name='制造商')),
                ('assets_tag', models.CharField(blank=True, max_length=32, unique=True, verbose_name='资产标签')),
                ('sn', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='SN号')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('warranty_date', models.DateField(blank=True, null=True, verbose_name='保修日期')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('server_obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mem', to='cmdb.Hosts', verbose_name='所属服务器')),
            ],
            options={
                'verbose_name_plural': '内存表',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='VlanIP')),
                ('intranet_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='内网IP')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('port_num', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='端口个数')),
                ('model', models.CharField(blank=True, max_length=16, null=True, verbose_name='设备型号')),
                ('manfacturer_id', models.PositiveSmallIntegerField(choices=[(0, 'CISO'), (1, 'RuiJie'), (2, 'H3C')], default=0, verbose_name='制造商')),
                ('assets_tag', models.CharField(blank=True, max_length=32, unique=True, verbose_name='资产标签')),
                ('sn', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='SN号')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('warranty_date', models.DateField(blank=True, null=True, verbose_name='保修日期')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('asset_obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets', verbose_name='资产对象')),
                ('custom_tag', models.ManyToManyField(to='cmdb.CustomTag', verbose_name='自定义标签')),
            ],
            options={
                'verbose_name_plural': '网络设备表',
            },
        ),
        migrations.CreateModel(
            name='NIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='网卡名')),
                ('hwaddr', models.CharField(max_length=32, verbose_name='MAC地址')),
                ('netmask', models.CharField(max_length=32, verbose_name='子网掩码')),
                ('ipaddrs', models.GenericIPAddressField(verbose_name='IP地址')),
                ('model', models.CharField(max_length=16, verbose_name='网卡型号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('server_obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nic', to='cmdb.Hosts', verbose_name='所属服务器')),
            ],
            options={
                'verbose_name_plural': '网卡表',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='项目名')),
                ('description', models.TextField(blank=True, verbose_name='项目备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '项目表',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, unique=True, verbose_name='服务名')),
                ('version', models.CharField(blank=True, max_length=16, unique=True, verbose_name='服务版本')),
                ('port', models.PositiveIntegerField(blank=True, null=True, verbose_name='服务端口')),
                ('path', models.CharField(blank=True, max_length=32, verbose_name='服务路径')),
                ('cmd', models.CharField(blank=True, max_length=32, verbose_name='服务重启命令')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '安装服务表',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='用户组')),
                ('group_info', models.TextField(blank=True, null=True, verbose_name='用户组描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '用户组表',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='姓名')),
                ('duties', models.PositiveSmallIntegerField(choices=[(0, 'IT'), (1, '运维'), (2, 'DBA'), (3, '运维经理'), (4, '开发'), (5, '开发经理'), (6, '项目经理'), (7, '技术总监')], default=1, verbose_name='职务')),
                ('sector', models.PositiveSmallIntegerField(choices=[(0, '网络系统部'), (1, '开发部'), (2, '项目部'), (3, '技术部')], default=0, verbose_name='部门')),
                ('phone', models.CharField(blank=True, max_length=16, verbose_name='座机')),
                ('wechat', models.CharField(max_length=32, verbose_name='微信')),
                ('mobile', models.CharField(max_length=15, unique=True, verbose_name='手机')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
            options={
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.AddField(
            model_name='usergroup',
            name='users',
            field=models.ManyToManyField(to='cmdb.UserProfile', verbose_name='关联用户'),
        ),
        migrations.AddField(
            model_name='project',
            name='head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_head', to='cmdb.UserGroup', verbose_name='项目负责人'),
        ),
        migrations.AddField(
            model_name='project',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_manager', to='cmdb.UserGroup', verbose_name='系统管理员'),
        ),
        migrations.AddField(
            model_name='hosts',
            name='service',
            field=models.ManyToManyField(to='cmdb.Service', verbose_name='服务'),
        ),
        migrations.AddField(
            model_name='disk',
            name='server_obj',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='cmdb.Hosts', verbose_name='所属服务器'),
        ),
        migrations.AddField(
            model_name='assets',
            name='Project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Project', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='assets',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.IDC', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='assetrecord',
            name='asset_obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rcord', to='cmdb.Assets', verbose_name='变更对象'),
        ),
        migrations.AddField(
            model_name='assetrecord',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.UserProfile'),
        ),
        migrations.AddField(
            model_name='admininfo',
            name='name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.UserProfile', verbose_name='用户名'),
        ),
    ]
